name: check

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, 386]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
          echo "::set-output name=lintcache::$HOME/.cache/golangci-lint"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
            ${{ steps.go-env.outputs.lintcache }}
          key: lint-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}-${{ hashFiles('tg/*.go') }}
          restore-keys: |
            lint-${{ runner.os }}-go-

      - name: Lint
        env:
          GOARCH: ${{ matrix.arch }}
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout 30m

  # Check if there are any dirty changes after go mod tidy
  mod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-mod-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            check-mod-${{ runner.os }}-go-

      - name: Check git diff
        run: git diff --exit-code

  # Check if there are any dirty changes after go generate
  gen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-generate-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            check-generate-${{ runner.os }}-go-

      - name: Generate files
        run: make generate

      - name: Check git diff
        run: git diff --exit-code
